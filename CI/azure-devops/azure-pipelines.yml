trigger:
  paths:
    exclude:
    - docs/*
    - cpp.hint
    - README.md
    - History.md
    - CMakeSettings.json

pr:
  paths:
    exclude:
    - docs/*
    - README.md
    - History.md
    - CMakeSettings.json

variables:
- name: CmakeGenOptions
  value: -DBUILD_SAMPLES=ON -DBUILD_TESTS=ON -DBUILD_CPPRESTJSON_ARCHIVE=ON -DBUILD_RAPIDJSON_ARCHIVE=ON -DBUILD_PUGIXML_ARCHIVE=ON -DBUILD_RAPIDYAML_ARCHIVE=ON -DBUILD_CSV_ARCHIVE=ON -DBUILD_MSGPACK_ARCHIVE=ON
  readonly: true

jobs:
  - template: windows-jobs-template.yml
    parameters:
      name: 'Windows_VS2019_x64'
      image: 'windows-2019'
      platform: 'x64'
      vcpkgTriplet: "x64-windows"
      cmakeGenArgs: '$(CmakeGenOptions)'
      enableDebugBuild: false

  - template: windows-jobs-template.yml
    parameters:
      name: 'Windows_VS2019_Win32'
      image: 'windows-2019'
      platform: 'Win32'
      vcpkgTriplet: "x86-windows"
      cmakeGenArgs: '$(CmakeGenOptions)'
      enableDebugBuild: false

  - template: windows-jobs-template.yml
    parameters:
      name: 'Windows_VS2022_x64'
      image: 'windows-2022'
      platform: 'x64'
      vcpkgTriplet: "x64-windows"
      cmakeGenArgs: '$(CmakeGenOptions)'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Ubuntu_GCC_8'
      image: 'ubuntu-20.04'
      installToolsCmd: 'sudo apt-get install gcc-8 g++-8 ninja-build'
      vcpkgTriplet: "x64-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Ubuntu_GCC_12_CXX20'
      image: 'ubuntu-latest'
      installToolsCmd: 'sudo apt-get install gcc-12 g++-12 ninja-build'
      vcpkgTriplet: "x64-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DCMAKE_C_COMPILER=gcc-12 -DCMAKE_CXX_COMPILER=g++-12 -DCMAKE_CXX_STANDARD=20'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Ubuntu_Clang_8'
      image: 'ubuntu-20.04'
      installToolsCmd: 'sudo apt-get install clang-8 ninja-build --install-suggests'
      vcpkgTriplet: "x64-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DCMAKE_C_COMPILER=clang-8 -DCMAKE_CXX_COMPILER=clang++-8'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Ubuntu_Clang_15'
      image: 'ubuntu-latest'
      installToolsCmd: 'sudo apt-get install clang-15 ninja-build --install-suggests'
      vcpkgTriplet: "x64-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DCMAKE_C_COMPILER=clang-15 -DCMAKE_CXX_COMPILER=clang++-15'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'MacOS12_AppleClang_14'
      image: 'macOS-12'
      installToolsCmd: 'brew install ninja'
      vcpkgTriplet: "x64-osx"
      vcpkgCacheDir: "/Users/runner/.cache/vcpkg/archives/"
      cmakeGenArgs: '$(CmakeGenOptions)'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'MacOS14_AppleClang_14_CXX20'
      image: 'macOS-14'
      installToolsCmd: 'brew install ninja'
      vcpkgTriplet: "x64-osx"
      vcpkgCacheDir: "/Users/runner/.cache/vcpkg/archives/"
      cmakeGenArgs: '$(CmakeGenOptions) -DCMAKE_CXX_STANDARD=20'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Arm32_Linux_GCC13'
      image: 'ubuntu-latest'
      installToolsCmd: 'sudo apt-get install ninja-build qemu-user'
      compilerUrl: "https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-linux-gnueabihf.tar.xz"
      vcpkgTriplet: "bitserializer-arm32-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/cmake/toolchains/arm32-linux-toolchain.cmake -DBUILD_RAPIDYAML_ARCHIVE=OFF'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Arm64_Linux_GCC13_CXX20'
      image: 'ubuntu-latest'
      installToolsCmd: 'sudo apt-get install ninja-build qemu-user'
      compilerUrl: "https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz"
      vcpkgTriplet: "bitserializer-arm64-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/cmake/toolchains/arm64-linux-toolchain.cmake -DBUILD_RAPIDYAML_ARCHIVE=OFF'
      enableDebugBuild: false

  - template: unix-jobs-template.yml
    parameters:
      name: 'Arm64be_Linux_GCC13'
      image: 'ubuntu-latest'
      installToolsCmd: 'sudo apt-get install ninja-build qemu-user'
      compilerUrl: "https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64_be-none-linux-gnu.tar.xz"
      vcpkgTriplet: "bitserializer-arm64be-linux"
      cmakeGenArgs: '$(CmakeGenOptions) -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/cmake/toolchains/arm64be-linux-toolchain.cmake -DBUILD_RAPIDYAML_ARCHIVE=OFF'
      enableDebugBuild: false
