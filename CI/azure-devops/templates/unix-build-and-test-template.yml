parameters:
# [Required] Job name
  name: ''
# [Required] Build agent name
  image: ''
# [Required] VCPKG triplet
  vcpkgTriplet: ''
# [Optional] Install additional tools command line
  installToolsCmd: ''
# [Optional] URL to download the compiler
  compilerUrl: ''
# [Optional] CMake additional arguments for CMake generate mode
  cmakeGenArgs: ''
# [Optional] Build configuration (Debug, Release)
  buildConfiguration: 'Release'
# [Optional] Enable run tests
  enableRunTests: true

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.image }}
  variables:
    buildDirectory: 'build'
    vcpkgDir: '$(Pipeline.Workspace)/vcpkg'

  steps:
  - script: |
      ${{ parameters.installToolsCmd }}
    displayName: 'Install build tools'
    condition: ne('${{ parameters.installToolsCmd }}', '')

  - script: |
      echo ------------------------------------------------------------------------------
      echo -- Download compiler
      echo ------------------------------------------------------------------------------
      wget -nv ${{ parameters.compilerUrl }} -O compiler.tar.xz
      echo
      echo ------------------------------------------------------------------------------
      echo -- Extract compiler
      echo ------------------------------------------------------------------------------
      sudo tar -xf compiler.tar.xz -C /usr/
    displayName: 'Install compiler'
    condition: ne('${{ parameters.compilerUrl }}', '')

  - script: |
      echo ------------------------------------------------------------------------------
      echo -- Clone latest VCPKG
      echo ------------------------------------------------------------------------------
      git clone -v "https://github.com/microsoft/vcpkg.git" "${{ variables.vcpkgDir }}"
      echo
      echo ------------------------------------------------------------------------------
      echo -- Bootstrap VCPKG
      echo ------------------------------------------------------------------------------
      ${{ variables.vcpkgDir }}/bootstrap-vcpkg.sh
    displayName: 'Install VCPKG'

  - task: Cache@2
    inputs:
      key: |
        vcpkg | v8 | ${{ parameters.name }} | $(Build.SourcesDirectory)/vcpkg.json
      restoreKeys: |
        vcpkg | v8 | ${{ parameters.name }}
      path: ${{ variables.buildDirectory }}/vcpkg_installed/
      cacheHitVar: VCPKG_CACHE_RESTORED
    displayName: Configure cache of VCPKG packages

  - task: CMake@1
    inputs:
      workingDirectory: ${{ variables.buildDirectory }}
      cmakeArgs: '-GNinja -DCMAKE_BUILD_TYPE=${{ parameters.buildConfiguration }} -DCMAKE_TOOLCHAIN_FILE=${{ variables.vcpkgDir }}/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ parameters.vcpkgTriplet }} ${{ parameters.cmakeGenArgs }} ..'
    displayName: 'CMake - generate [${{ parameters.buildConfiguration }}]'

  - script: |
      ninja -C ${{ variables.buildDirectory }}
    displayName: 'Build [${{ parameters.buildConfiguration }}]'

  - script: |
      ctest --test-dir ${{ variables.buildDirectory }} -T test --output-on-failure -j$(nproc)
    displayName: 'Run tests'
    continueOnError: true
    condition: and(succeeded(), eq('${{ parameters.enableRunTests }}', true))

  - task: PublishTestResults@2
    displayName: 'Publish Test results'
    condition: and(succeeded(), eq('${{ parameters.enableRunTests }}', true))
    inputs:
      testResultsFormat: 'cTest'
      testResultsFiles: '**/Testing/**/Test.xml'
      searchFolder: '$(Build.SourcesDirectory)/${{ variables.buildDirectory }}'
      testRunTitle: '${{ parameters.name }} [${{ parameters.buildConfiguration }}]'
      buildPlatform: 'x64'
      buildConfiguration: '${{ parameters.buildConfiguration }}'
